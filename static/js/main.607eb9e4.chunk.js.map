{"version":3,"sources":["components/UserMenu/UserMenu.module.css","redux/auth/index.js","redux/auth/auth-selectors.js","redux/actions.js","redux/auth/auth-reducer.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","components/UserMenu/Navigation.js","components/UserMenu/UserMenu.js","components/UserMenu/AuthNav.js","components/UserMenu/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","getIsAuthenticated","state","auth","isAuthenticated","getUsername","user","name","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","initialUserState","email","createReducer","authActions","registerSuccess","_","payload","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","setError","error","registerError","loginError","logoutError","getCurrentUserError","combineReducers","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logOut","logIn","getCurrentUser","getState","persistedToken","get","connect","authSelectors","to","exact","className","styles","navlink","mapDispatchToProps","onLogout","authOperations","avatar","userMenuBlock","welcomeText","buttonLogOut","type","onClick","AuthNav","AppBarHeader","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurretnUser","fallback","path","items","actions","action","filter","contact","id","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","aythReducer","contacts","contactReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.607eb9e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBarHeader\":\"UserMenu_AppBarHeader__2uudm\",\"navlink\":\"UserMenu_navlink__2jzwR\",\"buttonLogOut\":\"UserMenu_buttonLogOut__1R7c2\",\"imgUser\":\"UserMenu_imgUser__1wf60\",\"welcomeText\":\"UserMenu_welcomeText__2f0Yt\"};","export { default as authActions } from './auth-actions';\r\nexport { default as authReducer } from './auth-reducer';\r\nexport { default as authOperations } from './auth-operations';\r\nexport { default as authSelectors } from './auth-selectors';","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\r\n\r\nconst getUsername = (state) => state.auth.user.name;\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nconst fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nconst fetchContactError = createAction(\"contacts/fetchContactError\");\r\n\r\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nconst addContactError = createAction(\"contacts/addContactError\");\r\n\r\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\r\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\r\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n\r\n  changeFilter,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./auth-actions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  isAuthenticated,\r\n  error,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n// регистрация\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\n// логин\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\n// логаут(разлогиниться)\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\n// получить текущего -  рефреш\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","import axios from \"axios\";\r\nimport authActions from \"./auth-actions\";\r\n\r\n// axios.defaults.baseURL = 'https://lpj-tasker.herokuapp.com';\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n// url бэкендa\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password } это credentials\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n\r\n    // token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authSelectors from \"../../redux/auth/auth-selectors\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./UserMenu.module.css\";\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact className={styles.navlink}>\r\n      Home\r\n    </NavLink>\r\n\r\n    {isAuthenticated && (\r\n      <NavLink to=\"/contacts\" exact className={styles.navlink}>\r\n        Phonebook\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors, authOperations } from \"../../redux/auth\";\r\n// import defaultAvatar from \"./default-avatar.jpg\";\r\nimport styles from \"./UserMenu.module.css\";\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className={styles.userMenuBlock}>\r\n    {/* <img className={styles.imgUser} src={avatar} alt=\"\" width=\"32\" /> */}\r\n    <span className={styles.welcomeText}>Welcome, {name}.</span>\r\n    <button className={styles.buttonLogOut} type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: authSelectors.getUsername(state),\r\n  // avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./UserMenu.module.css\";\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink to=\"/register\" exact className={styles.navlink}>\r\n      Sign up\r\n    </NavLink>\r\n    <NavLink to=\"/login\" exact className={styles.navlink}>\r\n      Log in\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport authSelectors from \"../../redux/auth/auth-selectors\";\r\nimport styles from \"./UserMenu.module.css\";\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header className={styles.AppBarHeader}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import { connect } from \"react-redux\";\r\nimport React, { Component, Suspense, lazy } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport AppBar from \"./components/UserMenu/AppBar\";\r\nimport authOperations from \"./redux/auth/auth-operations\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport PublicRoute from \"./components/PublicRoute\";\r\nimport styles from \"./\";\r\n\r\nconst HomeView = lazy(() =>\r\n  import(\"./views/HomeView\" /* webpackChunkName: \"home-page\" */)\r\n);\r\nconst RegisterView = lazy(() =>\r\n  import(\"./views/RegisterView\" /* webpackChunkName: \"home-page\" */)\r\n);\r\nconst LoginView = lazy(() =>\r\n  import(\"./views/LoginView\" /* webpackChunkName: \"home-page\" */)\r\n);\r\nconst ContactsView = lazy(() =>\r\n  import(\"./views/ContactsView\" /* webpackChunkName: \"home-page\" */)\r\n);\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurretnUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <AppBar />\r\n          <Suspense fallback={<p>Загружаем...</p>}>\r\n            <Switch>\r\n              <PublicRoute exact path=\"/\" component={HomeView} />\r\n              <PublicRoute\r\n                path=\"/register\"\r\n                restricted\r\n                redirectTo=\"/contacts\"\r\n                component={RegisterView}\r\n              />\r\n              <PublicRoute\r\n                path=\"/login\"\r\n                restricted\r\n                redirectTo=\"/contacts\"\r\n                component={LoginView}\r\n              />\r\n\r\n              <PrivateRoute\r\n                path=\"/contacts\"\r\n                redirectTo=\"/login\"\r\n                component={ContactsView}\r\n              />\r\n            </Switch>\r\n          </Suspense>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurretnUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.fetchContactSuccess]: (_, action) => action.payload,\r\n  [actions.addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [actions.deleteContactSuccess]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport contactReducer from \"./reducer\";\r\nimport aythReducer from \"./auth/auth-reducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, aythReducer),\r\n    contacts: contactReducer,\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}