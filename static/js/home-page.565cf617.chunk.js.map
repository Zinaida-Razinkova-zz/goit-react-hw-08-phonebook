{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","views/RegisterView.js","views/LoginView.js","redux/operations.js","components/ContactForm/ContactForm.js","redux/selectors.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/ContactsView.js","views/Phonebook.jpg","views/HomeView.js"],"names":["module","exports","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","styles","createFormAccount","createFormHeading","createForm","onSubmit","autoComplete","createFormLabel","createFormText","type","onChange","buttonCreateBlock","buttonCreateAccount","Component","mapDispatchToProps","authOperations","register","connect","LoginView","onLogin","loginFormPhonebook","loginFormHeading","loginForm","LoginFormLabel","LoginFormText","buttonLoginBlock","buttonLoginForm","logIn","number","dispatch","contact","actions","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","message","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","ContactForm","handlChange","event","currentTarget","handlSubmit","console","log","formSubmitHandler","reset","formConteiner","labelName","htmlFor","spanText","inputName","pattern","title","required","buttonAddContact","operations","getFilter","contacts","filter","getAllContacts","items","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","selectors","changeFilter","inputFilter","onDeleteButton","id","listContactList","map","listStyle","buttonContactList","onClick","ContactsView","appConteiner","text","HomeView","homeBlock","texthome","img","src","Phonebook","alt","width"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,aAAe,0BAA0B,KAAO,kBAAkB,SAAW,sBAAsB,gBAAkB,6BAA6B,oBAAsB,iCAAiC,UAAY,uBAAuB,WAAa,wBAAwB,eAAiB,4BAA4B,gBAAkB,6BAA6B,cAAgB,2BAA2B,eAAiB,4BAA4B,iBAAmB,8BAA8B,mBAAqB,gCAAgC,kBAAoB,+BAA+B,iBAAmB,8BAA8B,kBAAoB,+BAA+B,UAAY,yB,mBCAhuBD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,UAAY,+BAA+B,SAAW,8BAA8B,iBAAmB,wC,mBCApKD,EAAOC,QAAU,CAAC,YAAc,8B,mBCAhCD,EAAOC,QAAU,CAAC,gBAAkB,qCAAqC,UAAY,+BAA+B,kBAAoB,yC,gICIlIC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SAErB,OACE,gCACE,qBAAKW,UAAWC,IAAOC,kBAAvB,SACE,oBAAIF,UAAWC,IAAOE,kBAAtB,mCAEF,uBACEH,UAAWC,IAAOG,WAClBC,SAAUN,KAAKL,aACfY,aAAa,MAHf,UAKE,wBAAON,UAAWC,IAAOM,gBAAzB,UACE,sBAAMP,UAAWC,IAAOO,eAAxB,kBACA,uBACEC,KAAK,OACLtB,KAAK,OACLK,MAAOL,EACPuB,SAAUX,KAAKT,kBAInB,wBAAOU,UAAWC,IAAOM,gBAAzB,UACE,sBAAMP,UAAWC,IAAOO,eAAxB,mBACA,uBACEC,KAAK,QACLtB,KAAK,QACLK,MAAOJ,EACPsB,SAAUX,KAAKT,kBAInB,wBAAOU,UAAWC,IAAOM,gBAAzB,UACE,sBAAMP,UAAWC,IAAOO,eAAxB,sBACA,uBACEC,KAAK,WACLtB,KAAK,WACLK,MAAOH,EACPqB,SAAUX,KAAKT,kBAGnB,qBAAKU,UAAWC,IAAOU,kBAAvB,SACE,wBAAQX,UAAWC,IAAOW,oBAAqBH,KAAK,SAApD,wC,GA9DeI,aAwErBC,EAAqB,CACzBhB,WAAYiB,IAAeC,UAGdC,sBAAQ,KAAMH,EAAdG,CAAkChC,I,gIC5E3CiC,E,4MACJhC,MAAQ,CACNE,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMsB,QAAQ,EAAKjC,OAExB,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EACqBU,KAAKb,MAAzBE,EADD,EACCA,MAAOC,EADR,EACQA,SAEf,OACE,gCACE,qBAAKW,UAAWC,IAAOmB,mBAAvB,SACE,oBAAIpB,UAAWC,IAAOoB,iBAAtB,mCAEF,uBACErB,UAAWC,IAAOqB,UAClBjB,SAAUN,KAAKL,aACfY,aAAa,MAHf,UAKE,wBAAON,UAAWC,IAAOsB,eAAzB,UACE,sBAAMvB,UAAWC,IAAOuB,cAAxB,mBACA,uBACEf,KAAK,QACLtB,KAAK,QACLK,MAAOJ,EACPsB,SAAUX,KAAKT,kBAInB,wBAAOU,UAAWC,IAAOsB,eAAzB,UACE,sBAAMvB,UAAWC,IAAOuB,cAAxB,sBACA,uBACEf,KAAK,WACLtB,KAAK,WACLK,MAAOH,EACPqB,SAAUX,KAAKT,kBAGnB,qBAAKU,UAAWC,IAAOwB,iBAAvB,SACE,wBAAQzB,UAAWC,IAAOyB,gBAAiBjB,KAAK,SAAhD,gC,GAnDYI,aA6DlBC,EAAqB,CACzBK,QAASJ,IAAeY,OAGXV,sBAAQ,KAAMH,EAAdG,CAAkCC,I,0ICtClC,EArBI,SAAC,GAAD,IAAG/B,EAAH,EAAGA,KAAMyC,EAAT,EAASA,OAAT,OAAsB,SAACC,GACxC,IAAMC,EAAU,CAAE3C,OAAMyC,UAExBC,EAASE,IAAQC,qBAEjBC,IACGC,KAAK,YAAaJ,GAClBK,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcP,EAASE,IAAQM,kBAAkBD,OACtDE,OAAM,SAACC,GAAD,OAAWV,EAASE,IAAQS,gBAAgBD,EAAME,eAa9C,EAVO,SAACC,GAAD,OAAe,SAACb,GACpCA,EAASE,IAAQY,wBAEjBV,IACGW,OADH,oBACuBF,IACpBP,MAAK,kBAAMN,EAASE,IAAQc,qBAAqBH,OACjDJ,OAAM,SAACC,GAAD,OAAWV,EAASE,IAAQe,mBAAmBP,EAAME,e,OCtB1DM,E,4MACJ7D,MAAQ,CACNC,KAAM,GACNyC,OAAQ,I,EAGVoB,YAAc,SAACC,GAAW,IAAD,EACCA,EAAMC,cAAtB/D,EADe,EACfA,KAAMK,EADS,EACTA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAI1B2D,YAAc,SAACF,GACbA,EAAMrD,iBACNwD,QAAQC,IAAI,EAAKnE,OAEjB,EAAKW,MAAMyD,kBAAkB,EAAKpE,OAClC,EAAKqE,S,EAGPA,MAAQ,WACN,EAAK9D,SAAS,CACZN,KAAM,GACNyC,OAAQ,M,4CAIZ,WACE,OACE,mCACE,uBAAM5B,UAAWC,IAAOuD,cAAenD,SAAUN,KAAKoD,YAAtD,UACE,wBAAOnD,UAAWC,IAAOwD,UAAWC,QAAQ,GAA5C,UACE,sBAAM1D,UAAWC,IAAO0D,SAAxB,kBACA,uBACE3D,UAAWC,IAAO2D,UAClBlD,SAAUX,KAAKiD,YACfxD,MAAOO,KAAKb,MAAMC,KAClBsB,KAAK,OACLtB,KAAK,OACL0E,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAO/D,UAAWC,IAAOwD,UAAWC,QAAQ,GAA5C,UACE,sBAAM1D,UAAWC,IAAO0D,SAAxB,oBACA,uBACE3D,UAAWC,IAAO2D,UAClBlD,SAAUX,KAAKiD,YACfxD,MAAOO,KAAKb,MAAM0C,OAClBnB,KAAK,MACLtB,KAAK,SACL0E,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,OAGZ,wBAAQ/D,UAAWC,IAAO+D,iBAAkBvD,KAAK,SAAjD,kC,GAzDgBI,aAuEXI,cAAQ,MALI,SAACY,GAAD,MAAe,CACxCyB,kBAAmB,SAACnE,EAAMyC,GAAP,OACjBC,EAASoC,EAAsB9E,EAAMyC,QAG1BX,CAAkC8B,G,yBC3E3CmB,EAAY,SAAChF,GAAD,OAAWA,EAAMiF,SAASC,QAEtCC,EAAiB,SAACnF,GAAD,OAAWA,EAAMiF,SAASG,OAclC,GACbJ,YACAG,iBACAE,mBAfyBC,YACzB,CAACH,EAAgBH,IACjB,SAACI,EAAOF,GACN,IAAMK,EAAmBL,EAAOM,cAEhC,OAAOJ,EAAMF,QAAO,qBAAGjF,KAChBuF,cAAcC,SAASF,UCelC,IAQexD,eARS,SAAC/B,GAAD,MAAY,CAClCM,MAAOoF,EAAUV,UAAUhF,OAGF,SAAC2C,GAAD,MAAe,CACxCnB,SAAU,SAACuC,GAAD,OAAWpB,EAASE,IAAQ8C,aAAa5B,EAAM1D,OAAOC,YAGnDyB,EA5Bf,YAAsC,IAApBzB,EAAmB,EAAnBA,MAAOkB,EAAY,EAAZA,SACvB,OACE,mCACE,kCACE,yDACA,uBACEV,UAAWC,IAAO6E,YAClBrE,KAAK,OACLjB,MAAOA,EACPkB,SAAUA,Y,iBC0BLO,eARS,SAAC/B,GAAD,MAAY,CAClCiF,SAAUS,EAAUL,mBAAmBrF,OAGd,SAAC2C,GAAD,MAAe,CACxCkD,eAAgB,SAACC,GAAD,OAAQnD,EAASoC,EAAyBe,QAG7C/D,EAnCK,SAAC,GAAkC,IAAhCkD,EAA+B,EAA/BA,SAAUY,EAAqB,EAArBA,eAC/B,OACE,mCACE,oBAAI/E,UAAWC,IAAOgF,gBAAtB,SACGd,EAASe,KAAI,SAACpD,GAAD,OACZ,qBAAI9B,UAAWC,IAAOkF,UAAtB,UACGrD,EAAQ3C,KAAO,MAAQ2C,EAAQF,OAChC,wBACE5B,UAAWC,IAAOmF,kBAClBC,QAAS,WACPN,EAAejD,EAAQkD,KAH3B,sBAFoClD,EAAQkD,c,iBCGzCM,UAVM,kBACnB,sBAAKtF,UAAWC,IAAOsF,aAAvB,UACE,oBAAIvF,UAAWC,IAAOuF,KAAtB,uBACA,cAAC,EAAD,IACA,oBAAIxF,UAAWC,IAAOuF,KAAtB,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,S,iECXW,MAA0B,sC,OCyB1BC,UArBE,kBACf,8BACE,0BAASzF,UAAWC,IAAOyF,UAA3B,UACE,oBAAI1F,UAAWC,IAAO0F,SAAtB,uBACA,qBAAK3F,UAAWC,IAAO2F,IAAKC,IAAKC,EAAWC,IAAI,YAAYC,MAAM,QAClE,mBAAGhG,UAAWC,IAAO0F,SAArB","file":"static/js/home-page.565cf617.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appConteiner\":\"App_appConteiner__c3pNV\",\"text\":\"App_text__1nXAg\",\"texthome\":\"App_texthome__195vN\",\"buttonLoginForm\":\"App_buttonLoginForm__1xL6H\",\"buttonCreateAccount\":\"App_buttonCreateAccount__21Rk1\",\"loginForm\":\"App_loginForm__3GJyl\",\"createForm\":\"App_createForm__2OnaX\",\"LoginFormLabel\":\"App_LoginFormLabel__1WDFW\",\"createFormLabel\":\"App_createFormLabel__PbQNP\",\"LoginFormText\":\"App_LoginFormText__3z7kX\",\"createFormText\":\"App_createFormText__344XB\",\"buttonLoginBlock\":\"App_buttonLoginBlock__3xgxc\",\"loginFormPhonebook\":\"App_loginFormPhonebook__3SZ-U\",\"createFormAccount\":\"App_createFormAccount__2wPvs\",\"loginFormHeading\":\"App_loginFormHeading__2jd_c\",\"createFormHeading\":\"App_createFormHeading__1-EC2\",\"homeBlock\":\"App_homeBlock__3bO2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelName\":\"ContactForm_labelName__1eQrd\",\"inputName\":\"ContactForm_inputName__3pRdx\",\"spanText\":\"ContactForm_spanText__DmcnS\",\"buttonAddContact\":\"ContactForm_buttonAddContact__GXDX-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filter_inputFilter__2MAUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContactList\":\"ContactList_listContactList__1MvZ4\",\"listStyle\":\"ContactList_listStyle__2N8gl\",\"buttonContactList\":\"ContactList_buttonContactList__3VVxc\"};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authOperations } from \"../redux/auth\";\r\nimport styles from \"../App.module.css\";\r\n\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister(this.state);\r\n\r\n    this.setState({ name: \"\", email: \"\", password: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className={styles.createFormAccount}>\r\n          <h1 className={styles.createFormHeading}>Create your account</h1>\r\n        </div>\r\n        <form\r\n          className={styles.createForm}\r\n          onSubmit={this.handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <label className={styles.createFormLabel}>\r\n            <span className={styles.createFormText}>Name</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.createFormLabel}>\r\n            <span className={styles.createFormText}>Email</span>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.createFormLabel}>\r\n            <span className={styles.createFormText}>Password</span>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <div className={styles.buttonCreateBlock}>\r\n            <button className={styles.buttonCreateAccount} type=\"submit\">\r\n              Create account\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authOperations } from \"../redux/auth\";\r\nimport styles from \"../App.module.css\";\r\n\r\nclass LoginView extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onLogin(this.state);\r\n\r\n    this.setState({ name: \"\", email: \"\", password: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className={styles.loginFormPhonebook}>\r\n          <h1 className={styles.loginFormHeading}>Log in to Phonebook</h1>\r\n        </div>\r\n        <form\r\n          className={styles.loginForm}\r\n          onSubmit={this.handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <label className={styles.LoginFormLabel}>\r\n            <span className={styles.LoginFormText}>Email</span>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.LoginFormLabel}>\r\n            <span className={styles.LoginFormText}>Password</span>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <div className={styles.buttonLoginBlock}>\r\n            <button className={styles.buttonLoginForm} type=\"submit\">\r\n              Log in\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onLogin: authOperations.logIn,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginView);\r\n","import axios from \"axios\";\r\nimport actions from \"./actions\";\r\n\r\nconst fetchContact = () => (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactError(error.message)));\r\n};\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(actions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(actions.deleteContactError(error.message)));\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, fetchContact };\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport operations from \"../../redux/operations\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handlChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n    // value - это намбер  в форме\r\n  };\r\n\r\n  handlSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n\r\n    this.props.formSubmitHandler(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={styles.formConteiner} onSubmit={this.handlSubmit}>\r\n          <label className={styles.labelName} htmlFor=\"\">\r\n            <span className={styles.spanText}>Name</span>\r\n            <input\r\n              className={styles.inputName}\r\n              onChange={this.handlChange}\r\n              value={this.state.name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={styles.labelName} htmlFor=\"\">\r\n            <span className={styles.spanText}>Number</span>\r\n            <input\r\n              className={styles.inputName}\r\n              onChange={this.handlChange}\r\n              value={this.state.number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button className={styles.buttonAddContact} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  formSubmitHandler: (name, number) =>\r\n    dispatch(operations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return items.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  getFilter,\r\n  getAllContacts,\r\n  getVisibleContacts,\r\n};\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport actions from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport selectors from \"../../redux/selectors\";\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <>\r\n      <label>\r\n        <span>Find contacts by name</span>\r\n        <input\r\n          className={styles.inputFilter}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: propTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: selectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (event) => dispatch(actions.changeFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport operations from \"../../redux/operations\";\r\nimport selectors from \"../../redux/selectors\";\r\n\r\nconst ContactList = ({ contacts, onDeleteButton }) => {\r\n  return (\r\n    <>\r\n      <ul className={styles.listContactList}>\r\n        {contacts.map((contact) => (\r\n          <li className={styles.listStyle} key={contact.id}>\r\n            {contact.name + \" : \" + contact.number}\r\n            <button\r\n              className={styles.buttonContactList}\r\n              onClick={() => {\r\n                onDeleteButton(contact.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: propTypes.array.isRequired,\r\n  onDeleteButton: propTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: selectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteButton: (id) => dispatch(operations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import ContactForm from \"../components/ContactForm/ContactForm\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport ContactList from \"../components/ContactList/ContactList\";\r\nimport styles from \"../App.module.css\";\r\n\r\nconst ContactsView = () => (\r\n  <div className={styles.appConteiner}>\r\n    <h1 className={styles.text}>Phonebook</h1>\r\n    <ContactForm />\r\n    <h2 className={styles.text}>Contacts</h2>\r\n    <Filter />\r\n    <ContactList />\r\n  </div>\r\n);\r\n\r\nexport default ContactsView;\r\n","export default __webpack_public_path__ + \"static/media/Phonebook.007518a8.jpg\";","import React from \"react\";\r\nimport styles from \"../App.module.css\";\r\nimport Phonebook from \"../views/Phonebook.jpg\";\r\n\r\nconst HomeView = () => (\r\n  <div>\r\n    <section className={styles.homeBlock}>\r\n      <h1 className={styles.texthome}>Phonebook</h1>\r\n      <img className={styles.img} src={Phonebook} alt=\"Phonebook\" width=\"150\" />\r\n      <p className={styles.texthome}>\r\n        The long awaited app is available! Phonebook allows you to completely\r\n        replace standard phone and contact manager. Phonebook makes access to\r\n        call history, contacts, groups and favorites is incredibly simple and\r\n        pleasant. The controls are designed so that all actions can be do it\r\n        with one hand - you don't have to reach the top of the screen, it will\r\n        become more convenient to use the phone. The phonebook supports T9 and\r\n        is easy customizable! Phonebook works faster and better than all\r\n        existing ones analogs, and also offers a completely new way of managing\r\n        contacts - viewing and editing a contact occurs in one place, without\r\n        opening new windows.\r\n      </p>\r\n    </section>\r\n  </div>\r\n);\r\n\r\nexport default HomeView;\r\n"],"sourceRoot":""}